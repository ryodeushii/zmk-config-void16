//                                                      ▀▀▀█
//               ▄▄▄▄      ▄▄▄      ▄▄▄▄▄      ▄▄▄▄▄       █
//               █        █▄▄▄█    █    █     █    █       █
//            ▄▄▄█▄▄▄     ▀▄▄▄     ▀▄▄▄▄█     ▀▄▄▄▀█    ▄▄▄█▄▄▄
//                                  ▄▄▄▄▀  

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

//#include <dt-bindings/zmk/mouse.h>

#define KRITA1  0
#define KRITA2  1
#define HEAVY1  2
#define HEAVY2  3

/ {
    macros {
        k_save: k_save {
            label = "KRITA_Save";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(S)>;
        };

        win_screen_area: win_screen_area {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(LS(S))>;
            label = "WIN_SCREEN_AREA";
        };

        premiere_remove_next_gap: premiere_remove_next_gap {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(SEMICOLON) &kp X &kp LS(DEL)>;
            label = "PREMIERE_REMOVE_NEXT_GAP";
        };

        premiere_redo: premiere_pro_redo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(Y))>;
            label = "PREMIERE_PRO_REDO";
        };

        premiere_undo: premiere_pro_undo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(Z)>;
            label = "PREMIERE_PRO_UNDO";
        };
    };

    // ───────────────────────────────────────────────────────────────────────────

    combos {
        compatible = "zmk,combos";

        bootloader {
            bindings = <&bootloader>;
            key-positions = <4 7 13 14>;
        };

        reset {
            bindings = <&sys_reset>;
            key-positions = <8 11 1 2>;
        };
    };

    behaviors {
        layer_or_undo: layer_or_undo {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_OR_UNDO";
            bindings = <&mo>, <&premiere_undo>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        layer_or_redo: layer_or_redo {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_OR_REDO";
            bindings = <&mo>, <&premiere_redo>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ───────────────────────────────────────────────────────────────────────────
        // ───────────────────────────────────────────────────────────────────────────
        // ───────────────────────────────────────────────────────────────────────────

        default {
            bindings = <
&lt 1 NUMBER_1  &lt 2 N2  &layer_or_undo 3 0  &layer_or_redo 4 0
&kp N5          &kp N6    &none               &none
&kp N9          &kp N0    &kp Q               &kp W
&none           &none     &kp T               &kp Y
            >;
        };

        l1 {
            bindings = <
&trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans
&trans  &trans  &trans  &premiere_remove_next_gap
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans
&trans  &trans  &trans  &kp NUMBER_3
            >;
        };

        layer_4 {
            bindings = <
&trans            &trans  &trans  &trans
&trans            &trans  &trans  &trans
&trans            &trans  &trans  &trans
&win_screen_area  &trans  &trans  &kp NUMBER_4
            >;
        };
    };
};
